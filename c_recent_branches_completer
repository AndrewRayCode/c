#!/bin/bash

function _c_complete_branch() {
    local cur=${COMP_WORDS[COMP_CWORD]}
    local branches=`git for-each-ref --sort=-committerdate refs/heads/ | head -n 10`

    # By default bash breaks on "words", not lines. Set this magical garbage
    # so autocomplete works with line breaks, not one big string
    local IFS=$'\n'

    local output=''
    while read -r branch;
    do
        output+=`echo $branch | sed 's/.*refs\/heads\///'`
        local rawBranchName=`git show --quiet $(echo $branch | cut -d' ' -f1) --pretty=format:"%h <%an> %s (%cr)"`

        # If a commit message has backticks or dollar signs in it, bash will
        # try to interpolate it when outputting. Escape backtick and dollar
        # sign to prevent that
        local sanitizedBranchName=`echo $rawBranchName | sed 's/\([$\`]\)/\\\1/g'`

        # I have no idea why we have to escape single quotes here
        output+=" \'${sanitizedBranchName}\'"$'\n'
    done <<< "$branches"

    # Why do I lowercase the output? For completion?
    local response=''
    for branch in $output
    do
        local lowerBranch=`echo $branch | tr '[:upper:]' '[:lower:]'`
        if [[ $branch =~ .*$cur.* ]]; then
            response+="$branch"$'\n'
        fi
    done

    COMPREPLY=( $( compgen -W "$response" -- $cur ) )
}

complete -F _c_complete_branch c

